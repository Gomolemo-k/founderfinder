name: Deploy OpenNext to Cloudflare

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
      AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
      BASE_URL: ${{ secrets.BASE_URL }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build OpenNext for Cloudflare
        run: npx opennextjs-cloudflare build

      - name: Install Wrangler
        run: npm install -g wrangler

      - name: Deploy Worker to Cloudflare
        run: |
          set -euo pipefail

          # Detect worker file
          WORKER_JS=".open-next/worker.js"
          if [ ! -f "$WORKER_JS" ]; then
            WORKER_JS=".open-next/worker/worker.js"
          fi

          if [ ! -f "$WORKER_JS" ]; then
            echo "Worker script not found. Contents of .open-next:" && ls -R .open-next || true
            exit 1
          fi

          # Login and deploy using Wrangler
          wrangler login --api-token ${{ secrets.CF_API_TOKEN }}
          wrangler deploy --account-id ${{ secrets.CF_ACCOUNT_ID }} --name founderfinder --modules "${WORKER_JS}"

      - name: Configure AWS CLI for Cloudflare R2
        run: |
          set -euo pipefail
          aws configure set aws_access_key_id ${{ secrets.R2_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.R2_SECRET_ACCESS_KEY }}
          aws configure set default.region auto
          aws configure set default.s3.endpoint-url https://cffdf44b9e5c6d35ebeac1d15fe85958.r2.cloudflarestorage.com

      - name: Upload static assets to R2
        run: |
          set -euo pipefail
          ASSET_DIR=".open-next/assets"

          if [ ! -d "$ASSET_DIR" ]; then
            echo "No assets directory found at $ASSET_DIR â€” skipping R2 upload."
            exit 0
          fi

          echo "Uploading static assets from $ASSET_DIR to R2..."
          aws s3 sync "$ASSET_DIR" s3://founderfinder-cache --exact-timestamps
          echo "R2 upload completed."
