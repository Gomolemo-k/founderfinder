name: Deploy to Cloudflare Workers

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      # 1️⃣ Checkout the repository
      - uses: actions/checkout@v4

      # 2️⃣ Install build tools (for native modules like lightningcss)
      - name: Install build tools
        run: sudo apt-get update && sudo apt-get install -y build-essential python3

      # 3️⃣ Cache npm modules and Next.js cache for faster builds
      - name: Cache node modules and Next.js cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            .next/cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4️⃣ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.18.0

      # 5️⃣ Install dependencies
      - name: Install dependencies
        run: npm ci

      # 6️⃣ Build the project with OpenNext for Cloudflare
      - name: Build the project using OpenNext
        run: npx open-next build --adapter=cloudflare
        env:
          POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          BASE_URL: ${{ secrets.BASE_URL }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          NEXT_TELEMETRY_DISABLED: 1
          WRANGLER_SEND_METRICS: "false"

      # 7️⃣ Install Wrangler globally
      - name: Install Wrangler
        run: npm install -g wrangler

      # 8️⃣ Deploy to Cloudflare Workers
      - name: Deploy to Cloudflare Workers
        run: npm run deploy
        env:
          NEXT_TELEMETRY_DISABLED: 1
          WRANGLER_SEND_METRICS: "false"
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          BASE_URL: ${{ secrets.BASE_URL }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
