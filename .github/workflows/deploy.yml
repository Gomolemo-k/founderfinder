name: Deploy OpenNext to Cloudflare

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2️⃣ Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.18.0

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: npm ci

      # 4️⃣ Install Wrangler early (needed for config)
      - name: Install Wrangler
        run: npm install -g wrangler

      # 5️⃣ Create wrangler.toml configuration
      - name: Create Wrangler config
        run: |
          cat <<EOT > wrangler.toml
          name = "founderfinder"
          main = ".open-next/worker.js"
          compatibility_date = "2024-01-01"
          
          [vars]
          POSTGRES_URL = "${{ secrets.POSTGRES_URL }}"
          STRIPE_SECRET_KEY = "${{ secrets.STRIPE_SECRET_KEY }}"
          
          [[r2_buckets]]
          binding = "NEXT_INC_CACHE_R2_BUCKET"
          bucket_name = "founderfinder-cache"
          preview_bucket_name = "founderfinder-cache"
          EOT

      # 6️⃣ Build OpenNext for Cloudflare
      - name: Build OpenNext Worker
        env:
          POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          BASE_URL: ${{ secrets.BASE_URL }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
        run: npx opennextjs-cloudflare build --target cloudflare

      # 7️⃣ Verify worker.js exists
      - name: Verify worker.js file
        run: ls -la .open-next/worker.js

      # 8️⃣ Deploy Worker using Wrangler
      - name: Deploy Worker with Wrangler
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: wrangler deploy

      # 9️⃣ Upload static assets to R2 bucket
      - name: Upload static assets to R2 (founderfinder-cache)
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          set -e
          for file in $(find .open-next/assets -type f); do
            key="${file#.open-next/assets/}"
            mime_type=$(file --mime-type -b "$file")
            echo "Uploading $key ($mime_type)..."
            response=$(curl -s -X PUT \
              "https://api.cloudflare.com/client/v4/accounts/${CLOUDFLARE_ACCOUNT_ID}/r2/buckets/founderfinder-cache/objects/$key" \
              -H "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}" \
              -H "Content-Type: $mime_type" \
              --data-binary @"$file")
            echo "$response" | grep -q '"success":true' || { echo "❌ Failed to upload $key"; exit 1; }
          done