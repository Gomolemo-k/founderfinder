name: Deploy FounderFinder Worker to Cloudflare

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.18.0

      - name: Install dependencies
        run: npm install

      - name: Build Worker
        run: npm run build
        # Make sure your package.json has a "build" script that outputs to .open-next/worker.js
        # Or adjust the path to your worker output file

      - name: Deploy Worker to Cloudflare
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          curl -X PUT \
            "https://api.cloudflare.com/client/v4/accounts/${CLOUDFLARE_ACCOUNT_ID}/workers/scripts/founderfinder" \
            -H "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}" \
            -F "metadata={
              \"main_module\": \".open-next/worker.js\",
              \"type\": \"esm\",
              \"bindings\": [
                {
                  \"name\": \"FOUNDERFINDER_CACHE\",
                  \"type\": \"r2_bucket\",
                  \"bucket_name\": \"founderfinder-cache\"
                }
              ],
              \"body_part\": \"script\"
            };type=application/json" \
            -F "script=@.open-next/worker.js;type=application/javascript+module"

      - name: Upload static assets to R2
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          set -e
          for file in $(find .open-next/assets -type f); do
            key="${file#.open-next/assets/}"
            mime_type=$(file --mime-type -b "$file")
            echo "Uploading $key ($mime_type)..."
            response=$(curl -s -X PUT \
              "https://api.cloudflare.com/client/v4/accounts/${CLOUDFLARE_ACCOUNT_ID}/r2/buckets/founderfinder-cache/objects/$key" \
              -H "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}" \
              -H "Content-Type: $mime_type" \
              --data-binary @"$file")
            echo "$response" | grep -q '"success":true' || { echo "‚ùå Failed to upload $key"; exit 1; }
          done
