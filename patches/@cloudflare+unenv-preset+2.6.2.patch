diff --git a/node_modules/@cloudflare/unenv-preset/dist/runtime/node/module.mjs b/node_modules/@cloudflare/unenv-preset/dist/runtime/node/module.mjs
index c54d05e..fixed000 100644
--- a/node_modules/@cloudflare/unenv-preset/dist/runtime/node/module.mjs
+++ b/node_modules/@cloudflare/unenv-preset/dist/runtime/node/module.mjs
@@ -25,6 +25,7 @@ import {
   syncBuiltinESMExports,
   wrap
 } from "unenv/node/module";
+
 export {
   Module,
   SourceMap,
@@ -51,20 +52,24 @@ export {
   syncBuiltinESMExports,
   wrap
 } from "unenv/node/module";
+
+// Cloudflare Workers fix: ensure createRequire always gets a valid file path
 const workerdModule = process.getBuiltinModule("node:module");
-export const createRequire = (file) => {
-  return Object.assign(workerdModule.createRequire(file), {
-    resolve: Object.assign(
-      notImplemented("module.require.resolve"),
-      {
-        paths: notImplemented("module.require.resolve.paths")
-      }
-    ),
-    cache: Object.create(null),
-    extensions: _extensions,
-    main: undefined
-  });
+export const createRequire = (file) => {
+  // Use import.meta.url if file is undefined
+  const path = file ?? import.meta.url;
+  return Object.assign(workerdModule.createRequire(path), {
+    resolve: Object.assign(
+      notImplemented("module.require.resolve"),
+      { paths: notImplemented("module.require.resolve.paths") }
+    ),
+    cache: Object.create(null),
+    extensions: _extensions,
+    main: undefined
+  });
 };
+
 export default {
   Module,
   SourceMap,
